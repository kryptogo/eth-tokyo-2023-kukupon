/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WhitelistingPaymaster,
  WhitelistingPaymasterInterface,
} from "../../../contracts/paymaster/WhitelistingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sponsoredGas",
        type: "uint256",
      },
    ],
    name: "AddressAddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sponsoredGas",
        type: "uint256",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userDetails",
    outputs: [
      {
        internalType: "bool",
        name: "isWhitelisted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "remainingGas",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d67380380610d6783398101604081905261002f91610123565b8061003933610049565b61004281610099565b5050610153565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a16100c3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561013557600080fd5b81516001600160a01b038116811461014c57600080fd5b9392505050565b610c05806101626000396000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102a3578063d0e30db0146102b8578063f2fde38b146102c0578063f465c77e146102e057600080fd5b8063a9a234091461022e578063b0d691fe1461024e578063bb9fe6bf1461026e578063c23a5cea1461028357600080fd5b8063584465f2116100c6578063584465f2146101a3578063715018a6146101c3578063796d4371146101d85780638da5cb5b146101fc57600080fd5b80630396cb60146100f8578063205c28781461010d578063214405fc1461012d57806348dec2a71461014d575b600080fd5b61010b610106366004610998565b61030e565b005b34801561011957600080fd5b5061010b6101283660046109da565b610397565b34801561013957600080fd5b5061010b6101483660046109da565b610406565b34801561015957600080fd5b50610187610168366004610a06565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152015b60405180910390f35b3480156101af57600080fd5b5061010b6101be366004610a06565b6104e1565b3480156101cf57600080fd5b5061010b610518565b3480156101e457600080fd5b506101ee613a9881565b60405190815260200161019a565b34801561020857600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161019a565b34801561023a57600080fd5b5061010b610249366004610a23565b61052c565b34801561025a57600080fd5b50600154610216906001600160a01b031681565b34801561027a57600080fd5b5061010b610546565b34801561028f57600080fd5b5061010b61029e366004610a06565b6105b2565b3480156102af57600080fd5b506101ee610635565b61010b6106c0565b3480156102cc57600080fd5b5061010b6102db366004610a06565b61071f565b3480156102ec57600080fd5b506103006102fb366004610ab2565b6107af565b60405161019a929190610b06565b610316610848565b6001546040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561037b57600080fd5b505af115801561038f573d6000803e3d6000fd5b505050505050565b61039f610848565b6001546040517f205c28780000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561037b57600080fd5b61040e610848565b6001600160a01b0382166104695760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061646472657373000000000000000000000000000000000060448201526064015b60405180910390fd5b604080518082018252600180825260208083018581526001600160a01b0387166000818152600284528690209451855460ff19169015151785559051939092019290925591518381527f3c144a3353f1bf91f2a96f3dc0c10980220384694d8304a8c68f2ba299eb0f8c910160405180910390a25050565b6104e9610848565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610520610848565b61052a60006108a2565b565b6105346108ff565b61054084848484610916565b50505050565b61054e610848565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561059e57600080fd5b505af1158015610540573d6000803e3d6000fd5b6105ba610848565b6001546040517fc23a5cea0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b5050505050565b6001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190610b5b565b905090565b6001546040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561061a57600080fd5b610727610848565b6001600160a01b0381166107a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610460565b6107ac816108a2565b50565b60606000806002816107c46020890189610a06565b6001600160a01b0316815260208082019290925260409081016000208151808301909252805460ff16158015835260019091015492820192909252915061082a578381602001511061082a57505060408051602081019091526000808252909150610840565b5050604080516020810190915260008152905060015b935093915050565b6000546001600160a01b0316331461052a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610460565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461052a57600080fd5b600080610925848601866109da565b90925090506000610938613a9885610ba3565b6040805180820190915260018152909150602081016109578385610bbc565b90526001600160a01b039390931660009081526002602090815260409091208451815460ff1916901515178155930151600190930192909255505050505050565b6000602082840312156109aa57600080fd5b813563ffffffff811681146109be57600080fd5b9392505050565b6001600160a01b03811681146107ac57600080fd5b600080604083850312156109ed57600080fd5b82356109f8816109c5565b946020939093013593505050565b600060208284031215610a1857600080fd5b81356109be816109c5565b60008060008060608587031215610a3957600080fd5b843560038110610a4857600080fd5b9350602085013567ffffffffffffffff80821115610a6557600080fd5b818701915087601f830112610a7957600080fd5b813581811115610a8857600080fd5b886020828501011115610a9a57600080fd5b95986020929092019750949560400135945092505050565b600080600060608486031215610ac757600080fd5b833567ffffffffffffffff811115610ade57600080fd5b84016101608187031215610af157600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610b345760208187018101516060868401015201610b17565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610b6d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610bb657610bb6610b74565b92915050565b81810381811115610bb657610bb6610b7456fea2646970667358221220417946d3c3a7ea7fedfee24b29ed45c38b3a6e12a7e3dcbd468e90e240aa5f0c64736f6c63430008120033";

type WhitelistingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistingPaymaster__factory extends ContractFactory {
  constructor(...args: WhitelistingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WhitelistingPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<WhitelistingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): WhitelistingPaymaster {
    return super.attach(address) as WhitelistingPaymaster;
  }
  override connect(signer: Signer): WhitelistingPaymaster__factory {
    return super.connect(signer) as WhitelistingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistingPaymasterInterface {
    return new utils.Interface(_abi) as WhitelistingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistingPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WhitelistingPaymaster;
  }
}
